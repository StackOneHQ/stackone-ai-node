name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          mcp_config: |
            {
              "mcpServers": {
                  "context7": {
                      "command": "npx",
                      "args": ["-y", "@upstash/context7-mcp"]
                  }
              }
            }
          allowed_tools: "Bash,mcp__context7__resolve-library-id,mcp__context7__get-library-docs"
          custom_instructions: |
            "This is a toolset for the StackOne API. StackOne is an integrations company which provides a unified api for many SaaS companies. This toolset allows AI agent developers to use the StackOne API through a tools interface. It provides developer friendly transformations and shims to allow agents to work with the api. These largely revolve around handling of documents eg. getting them from a local or remote file system and converting them to a format that can be used by the api. The package is written in typescript using Bun and released with release-please to NPM. It should be usable in Node.js and Bun. Never use any Bun specific features. The repo contains examples for every new feature. All examples should be runnable and are used to build the docs."
